#!/usr/bin/env python

# Copyright (c) 2013-2016, Rethink Robotics
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# 1. Redistributions of source code must retain the above copyright notice,
#    this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the Rethink Robotics nor the names of its
#    contributors may be used to endorse or promote products derived from
#    this software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.

from dynamic_reconfigure.parameter_generator_catkin import (
    ParameterGenerator,
    double_t,
)

gen = ParameterGenerator()

joints = ('right_j0', 'right_j1', 'right_j2', 'right_j3', 'right_j4', 'right_j5', 'right_j6')

msg = (" - Joint spring stiffness (k). Hooke's Law.",
       " - Joint damping coefficient (c).")
min = 0.0
default_spring = (10.0, 15.0, 5.0, 5.0, 3.0, 2.0, 1.5)
default_damping = (0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1)
max_spring = (30.0, 30.0, 15.0, 15.0, 9.0, 4.0, 4.0)
max_damping = (10.0, 7.5, 7.5, 5.0, 1.5, 1.5, 1.0)

for idx, joint in enumerate(joints):
    gen.add(
        joint + "_spring_stiffness", double_t, 0, joint + msg[0],
        default_spring[idx], min, max_spring[idx]
        )
    gen.add(
        joint + "_damping_coefficient", double_t, 0, joint + msg[1],
        default_damping[idx], min, max_damping[idx]
        )

exit(gen.generate('joint_torque', '', 'JointSpringsExample'))
